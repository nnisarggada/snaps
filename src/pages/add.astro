---
import Base from "@layouts/Base.astro";
---

<Base title="Add Photo | SNAPS">
  <div
    class="w-full min-h-screen max-w-xl mx-auto flex items-center justify-center"
  >
    <form
      id="add-form"
      class="w-full flex flex-col gap-2 items-center justify-center p-8"
    >
      <input
        type="text"
        name="title"
        id="title"
        placeholder="A cool title"
        class="w-full bg-transparent text-4xl font-bold p-2"
        required
      />
      <div
        id="image-div"
        class="w-full aspect-square bg-neutral-900 flex flex-col justify-center items-center p-4 rounded-2xl hover:cursor-pointer"
      >
        <input
          type="file"
          accept="image/*"
          name="image"
          id="image"
          class="w-full h-full bg-neutral-900 rounded-2xl"
          required
        />
        <label
          tabindex="0"
          id="image-label"
          for="image"
          class="text-xl text-center"
        >
          Click to upload your photo or drag and drop it here</label
        >
      </div>
      <input
        type="text"
        name="tags"
        id="tags"
        placeholder="Add some tags seperated by commas"
        class="w-full bg-transparent text-md p-2"
      />
      <button
        id="upload-button"
        type="submit"
        class="mt-4 w-48 h-12 bg-purple-500 grid place-items-center hover:bg-purple-600 text-white text-xl font-bold py-2 px-8 rounded"
      >
        Upload
      </button>
    </form>
  </div>
</Base>

<style>
  input::file-selector-button,
  input[type="file"] {
    display: none;
  }
</style>

<script>
  import pb from "@utils/pocketbase";

  if (!pb.authStore.isValid) {
    window.location.href = "/login";
  }

  const form = document.getElementById("add-form") as HTMLFormElement;
  const imageDiv = document.getElementById("image-div") as HTMLDivElement;
  const imageInput = document.getElementById("image") as HTMLInputElement;
  const imageLabel = document.getElementById("image-label") as HTMLLabelElement;
  const uploadButton = document.getElementById(
    "upload-button",
  ) as HTMLButtonElement;

  let loading = false;

  imageDiv.addEventListener("click", () => {
    imageInput.click();
  });

  imageLabel.addEventListener("keydown", (e) => {
    if (e.key === "Enter") {
      imageInput.click();
    }
  });

  imageDiv.addEventListener("dragover", (event) => {
    event.preventDefault();
    imageLabel.innerHTML = "Drop it here";
  });

  imageDiv.addEventListener("drop", (event) => {
    event.preventDefault();
    imageInput.files = event.dataTransfer?.files as FileList;
    imageDiv.style.background = `url(${URL.createObjectURL(
      imageInput.files[0],
    )})`;
    imageDiv.style.backgroundSize = "cover";
    imageDiv.style.backgroundPosition = "center";
    imageLabel.innerHTML = "";
  });

  imageInput.addEventListener("change", () => {
    if (!imageInput.files) {
      return;
    }
    imageDiv.style.background = `url(${URL.createObjectURL(
      imageInput.files[0],
    )})`;
    imageDiv.style.backgroundSize = "cover";
    imageDiv.style.backgroundPosition = "center";
    imageLabel.innerHTML = "";
  });

  form.addEventListener("submit", async (event) => {
    event.preventDefault();

    if (loading) {
      return;
    }

    loading = true;

    uploadButton.innerHTML = "<div class='loader-white'></div>";
    uploadButton.classList.add("cursor-not-allowed");

    const formData = new FormData(form);

    try {
      await pb.collection("photos").create({
        title: formData.get("title") as string,
        file: formData.get("image") as string,
        categories: formData.get("tags") as string,
        author: pb.authStore.model?.id,
      });
      window.location.href = "/";
    } catch (error) {
      console.error(error);
      alert("Something went wrong, please try again :/");
    }

    loading = false;
    uploadButton.innerHTML = "Upload";
    uploadButton.classList.remove("cursor-not-allowed");
  });
</script>
